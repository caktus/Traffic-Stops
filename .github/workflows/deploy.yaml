name: deploy

on:
  push:
    branches: [main, develop, CU-868em6j24_Switch-to-uv]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ENV: staging
      GITHUB_ENV: https://staging.nccopwatch.org/
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set env vars (production)
        if: endsWith(github.ref, '/main')
        run: |
          echo "ENV=production" >> $GITHUB_ENV
          echo "ENV_URL=https://nccopwatch.org/" >> $GITHUB_ENV
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync --locked
      - name: Start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.ENV }}
      - name: Login to Docker
        id: docker-login
        run: |
          echo "env is $ENV"
          uv run inv $ENV aws.docker-login
      - name: Build, tag, push, and deploy image
        id: build-tag-push-deploy
        run: |
          echo "env is $ENV"
          uv run inv $ENV image deploy --verbosity=0
        env:
          BUILDKIT_PROGRESS: plain
      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ env.ENV }}
          env_url: ${{ env.ENV_URL }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
