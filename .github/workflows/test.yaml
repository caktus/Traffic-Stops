name: test

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        # From:
        # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: traffic_stops
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends postgresql-client
          uv sync --locked
      - run: uv run pre-commit run --show-diff-on-failure --color=always --all-files
      - name: Create NC database
        run: |
          psql $DATABASE_URL -c 'CREATE DATABASE traffic_stops_nc;'
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/traffic_stops
      - name: Run tests
        run: |
           uv run pytest
        env:
          DJANGO_SETTINGS_MODULE: traffic_stops.settings.dev
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/traffic_stops
          DATABASE_URL_NC: postgres://postgres:postgres@localhost:5432/traffic_stops_nc
      - name: Test deploy image build
        run: |
          uv run inv image.build
