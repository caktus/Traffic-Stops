services:
  django:
    image: trafficstops_app:latest
    command: [ "uwsgi", "--show-config" ]
    environment:
      DJANGO_MANAGEPY_MIGRATE: "on"
    env_file:
      - .docker.env
    links:
      - db:db
    depends_on:
      - redis
      - mailhog
    ports:
      - "8000:8000"
  worker:
    image: trafficstops_app:latest
    command: [ "celery", "--app=traffic_stops", "worker", "-l", "info" ]
    env_file:
      - .docker.env
    links:
      - db:db
    depends_on:
      - django
      - redis
      - mailhog
  beat:
    image: trafficstops_app:latest
    command: [ "celery", "--app=traffic_stops", "beat", "--pidfile=/tmp/celerybeat.pid", "--schedule=/tmp/celerybeat-schedule", "-l", "info" ]
    env_file:
      - .docker.env
    links:
      - db:db
    depends_on:
      - django
      - redis
      - mailhog
  mailhog:
    image: mailhog/mailhog:v1.0.0
  db:
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: traffic_stops
      DATABASE_URL: postgres://postgres@127.0.0.1:5432/traffic_stops
    image: postgres:16-alpine
    ports:
      - "9051:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint.postgres.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    shm_size: 512mb
  redis:
    image: redis:5-alpine
    ports:
      - "9052:6379"
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
  dev_media: {}
  dev_node_modules: {}
  dev_venv: {}
  dev_cache: {}
