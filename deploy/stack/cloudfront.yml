# This Cloudformation stack template was generated by
# https://github.com/caktus/aws-web-stacks
# at 2024-11-21 16:16:24.698582
# with parameters:
#	USE_CLOUDFRONT = on

Conditions:
  AppCloudFrontCertArnCondition: !Not
    - !Equals
      - !Ref 'AppCloudFrontCertArn'
      - ''
  AppCloudFrontForwardedHeadersCondition: !Not
    - !Equals
      - !Join
        - ''
        - !Ref 'AppCloudFrontForwardedHeaders'
      - ''
  CertificateCondition: !Or
    - !Not
      - !Equals
        - !Ref 'CustomAppCertificateArn'
        - ''
    - !Not
      - !Equals
        - !Ref 'CertificateValidationMethod'
        - (none)
  CustomAppCertArnCondition: !Not
    - !Equals
      - !Ref 'CustomAppCertificateArn'
      - ''
  NoAlternateDomains: !Equals
    - !Join
      - ''
      - !Ref 'DomainNameAlternates'
    - ''
  StackCertificateCondition: !Not
    - !Equals
      - !Ref 'CertificateValidationMethod'
      - (none)
  UsEast1Condition: !Equals
    - !Ref 'AWS::Region'
    - us-east-1
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Global
        Parameters:
          - DomainName
          - DomainNameAlternates
          - CertificateValidationMethod
          - CustomAppCertificateArn
      - Label:
          default: Application Server
        Parameters:
          - AppCloudFrontOriginDomainName
          - AppCloudFrontRoleArn
          - AppCloudFrontOriginRequestPolicyId
          - AppCloudFrontProtocolPolicy
          - AppCloudFrontForwardedHeaders
          - AppCloudFrontCertArn
    ParameterLabels:
      AppCloudFrontCertArn:
        default: CloudFront SSL Certificate ARN
      AppCloudFrontForwardedHeaders:
        default: CloudFront Forwarded Headers
      AppCloudFrontOriginDomainName:
        default: CloudFront Origin Domain Name
      AppCloudFrontOriginRequestPolicyId:
        default: Origin Request Policy ID
      AppCloudFrontProtocolPolicy:
        default: CloudFront Protocol Policy
      AppCloudFrontRoleArn:
        default: CloudFront Role ARN
      CertificateValidationMethod:
        default: Certificate Validation Method
      CustomAppCertificateArn:
        default: Custom App Certificate ARN
      DomainName:
        default: Domain Name
      DomainNameAlternates:
        default: Alternate Domain Names
Outputs:
  AppCloudFrontDomainName:
    Description: The app CDN domain name
    Value: !GetAtt 'AppCloudFrontDistribution.DomainName'
Parameters:
  AppCloudFrontCertArn:
    Description: If your stack is NOT in the us-east-1 you must manually create an ACM certificate for your application domain in the us-east-1 region and provide its ARN here.
    Type: String
  AppCloudFrontForwardedHeaders:
    Default: ''
    Description: >-
      The CachePolicy headers that will be forwarded to the origin and used in the cache key. The 'Host' header is required for SSL on an Elastic Load Balancer, but it should NOT be passed to a Lambda Function
      URL.
    Type: CommaDelimitedList
  AppCloudFrontOriginDomainName:
    Default: ''
    Description: Domain name of the origin server
    Type: String
  AppCloudFrontOriginRequestPolicyId:
    Default: 216adef6-5c7f-47e4-b989-5492eafa07d3
    Description: The unique identifier of the origin request policy to attach to the app cache behavior
    Type: String
  AppCloudFrontProtocolPolicy:
    AllowedValues:
      - redirect-to-https
      - https-only
      - allow-all
    Default: redirect-to-https
    Description: 'The protocols allowed by the application server''s CloudFront distribution. See: http://docs.aws.amazon.com/cloudfront/latest/APIReference/API_DefaultCacheBehavior.html'
    Type: String
  AppCloudFrontRoleArn:
    Default: ''
    Description: ARN of the role to add IAM permissions for invalidating this distribution
    Type: String
  CertificateValidationMethod:
    AllowedValues:
      - (none)
      - DNS
      - Email
    Default: DNS
    Description: >-
      How to validate domain ownership for issuing an SSL certificate - highly recommend DNS. DNS and Email will pause stack creation until you do something to complete the validation. If omitted, an HTTPS
      listener can be manually attached to the load balancer after stack creation.
    Type: String
  CustomAppCertificateArn:
    Description: An existing ACM certificate ARN to be used by the application ELB. DNS and Email validation will not work with this option.
    Type: String
  DomainName:
    Description: The fully-qualified domain name for the application.
    Type: String
  DomainNameAlternates:
    Description: A comma-separated list of Alternate FQDNs to be included in the Subject Alternative Name extension of the SSL certificate.
    Type: CommaDelimitedList
Resources:
  AppCloudFrontCachePolicy:
    Properties:
      CachePolicyConfig:
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        Name: AppCachePolicy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig: !If
            - AppCloudFrontForwardedHeadersCondition
            - HeaderBehavior: whitelist
              Headers: !Ref 'AppCloudFrontForwardedHeaders'
            - HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
    Type: AWS::CloudFront::CachePolicy
  AppCloudFrontDistribution:
    Properties:
      DistributionConfig:
        Aliases: !Split
          - ;
          - !Join
            - ''
            - - !Ref 'DomainName'
              - !If
                - NoAlternateDomains
                - ''
                - ;
              - !Join
                - ;
                - !Ref 'DomainNameAlternates'
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          CachePolicyId: !Ref 'AppCloudFrontCachePolicy'
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          OriginRequestPolicyId: !Ref 'AppCloudFrontOriginRequestPolicyId'
          TargetOriginId: ApplicationServer
          ViewerProtocolPolicy: !Ref 'AppCloudFrontProtocolPolicy'
        Enabled: true
        HttpVersion: http2
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: https-only
            DomainName: !Ref 'AppCloudFrontOriginDomainName'
            Id: ApplicationServer
        ViewerCertificate: !If
          - UsEast1Condition
          - AcmCertificateArn: !If
              - CustomAppCertArnCondition
              - !Ref 'CustomAppCertificateArn'
              - !Ref 'Certificate'
            MinimumProtocolVersion: TLSv1.2_2021
            SslSupportMethod: sni-only
          - !If
            - AppCloudFrontCertArnCondition
            - AcmCertificateArn: !Ref 'AppCloudFrontCertArn'
              MinimumProtocolVersion: TLSv1.2_2021
              SslSupportMethod: sni-only
            - !Ref 'AWS::NoValue'
      Tags:
        - Key: aws-web-stacks:stack-name
          Value: !Ref 'AWS::StackName'
    Type: AWS::CloudFront::Distribution
  AppCloudFrontInvalidationPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudfront:GetDistribution
              - cloudfront:GetDistributionConfig
              - cloudfront:ListDistributions
              - cloudfront:ListCloudFrontOriginAccessIdentities
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
              - cloudfront:ListInvalidations
            Effect: Allow
            Resource: '*'
      PolicyName: AppCloudFrontInvalidationPolicy
      Roles:
        - !Ref 'AppCloudFrontRoleArn'
    Type: AWS::IAM::Policy
  Certificate:
    Condition: StackCertificateCondition
    Properties:
      DomainName: !Ref 'DomainName'
      DomainValidationOptions:
        - DomainName: !Ref 'DomainName'
          ValidationDomain: !Ref 'DomainName'
      SubjectAlternativeNames: !If
        - NoAlternateDomains
        - !Ref 'AWS::NoValue'
        - !Ref 'DomainNameAlternates'
      Tags:
        - Key: aws-web-stacks:stack-name
          Value: !Ref 'AWS::StackName'
      ValidationMethod: !Ref 'CertificateValidationMethod'
    Type: AWS::CertificateManager::Certificate

