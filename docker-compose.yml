version: '3.4'

services:
  db:
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: traffic_stops
      DATABASE_URL: postgres://postgres@127.0.0.1:5432/traffic_stops
    image: postgres:12-alpine
    ports:
      - "54344:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint.postgres.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    shm_size: 512mb
  redis:
    image: redis:5-alpine
    ports:
      - "63791:6379"
    volumes:
      - redisdata:/data
  django:
    environment:
      DJANGO_SETTINGS_MODULE: traffic_stops.settings.dev
      DATABASE_URL: postgres://postgres@db:5432/traffic_stops
      DATABASE_URL_NC: postgres://postgres@db:5432/traffic_stops_nc
      CACHE_HOST: redis://redis:6379/1
      ENVIRONMENT: dev
      DJANGO_SECRET_KEY: dummy
      DOMAIN: localhost
      SESSION_COOKIE_SECURE: "False"
      DJANGO_SECURE_SSL_REDIRECT: "False"
      AWS_PROFILE: trafficstops
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: ["sleep", "infinity"]
    links:
      - db:db
      - redis:redis
    ports:
      - "8000:8000"
      - "3000:3000"
    volumes:
      - ~/.aws:/root/.aws/
      - node_modules:/code/node_modules
      - .:/code

volumes:
  pgdata:
  redisdata:
  node_modules: {}
