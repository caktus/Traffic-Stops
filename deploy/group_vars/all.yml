---
# ----------------------------------------------------------------------------
# Global: Common configuration variables for all environments being deployed
#         to Kubernetes.
# ----------------------------------------------------------------------------

app_name: trafficstops
ansible_connection: local

aws_region: us-east-2
aws_profile: trafficstops

admin_database_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  35663465323330356236653336333062613434373931393433396332663436623932616262343638
  6238333466326630626137643166346666373231313731310a373534336434353762663133616432
  61663134306434386435363737393063333636643566353830653531306137323031303065386466
  6562323932386239350a373236383962653732353861373162646663353333353565626666313464
  35386665623166343930303863383436373635333936366639376537363834346466

# ----------------------------------------------------------------------------
# caktus.aws-web-stacks: Ansible role to automate AWS CloudFormation stack
#                        provisioning with aws-web-stacks.
# ----------------------------------------------------------------------------

cloudformation_stack_state: present
cloudformation_stack_profile: '{{ aws_profile }}'
cloudformation_stack_region: '{{ aws_region }}'
cloudformation_stack_name: "{{ app_name }}-stack"
cloudformation_stack_termination_protection: true
cloudformation_stack_template_bucket: "aws-web-stacks-{{ app_name }}"
cloudformation_stack_template_local_path: '{{ playbook_dir + "/stack/eks-no-nat.yml" }}'
cloudformation_stack_template_parameters:
  PrimaryAZ: "{{ aws_region }}a"
  SecondaryAZ: "{{ aws_region }}b"
  DesiredScale: 2
  MaxScale: 4
  UseAES256Encryption: "true"
  CustomerManagedCmkArn: ""
  ContainerInstanceType: t3a.large
  ContainerVolumeSize: 40
  DatabaseAllocatedStorage: 100
  DatabaseClass: db.t3.large
  DatabaseEngineVersion: "12"
  DatabaseParameterGroupFamily: postgres12
  DatabaseMultiAZ: "false"
  DatabaseUser: "{{ app_name }}_admin"
  DatabasePassword: "{{ admin_database_password }}"
  DatabaseName: "{{ app_name }}"
  DomainName: nccopwatch.org
  DomainNameAlternates: ""
  AssetsCloudFrontDomain: files.nccopwatch.org
  AssetsCloudFrontCertArn: arn:aws:acm:us-east-1:606178775542:certificate/379950bb-4b29-4308-8418-122674fe1076
  AssetsUseCloudFront: "true"
cloudformation_stack_tags:
  Environment: "{{ app_name }}"

# Install Descheduler to attempt to spread out pods again after node failures
k8s_install_descheduler: yes
# You must set the k8s_descheduler_chart_version to match the Kubernetes
# node version (0.23.x -> K8s 1.23.x); see:
# https://github.com/kubernetes-sigs/descheduler#compatibility-matrix
k8s_descheduler_chart_version: v0.29.0
# See values.yaml for options:
# https://github.com/kubernetes-sigs/descheduler/blob/master/charts/descheduler/values.yaml#L63
k8s_descheduler_release_values:
  deschedulerPolicy:
    strategies:
      # During upgrades or reboots, don't pre-emptively drain a node.
      RemovePodsViolatingNodeTaints:
        enabled: false

# ----------------------------------------------------------------------------
# caktus.k8s-web-cluster: An Ansible role to help configure Kubernetes
#                         clusters for web apps.
# ----------------------------------------------------------------------------

k8s_cluster_name: "{{ cloudformation_stack_name }}-cluster"
k8s_context: "arn:aws:eks:us-east-2:606178775542:cluster/{{ k8s_cluster_name }}"
k8s_cluster_type: aws

# Continuous integration:
k8s_ci_aws_profile: "{{ aws_profile }}"
k8s_ci_repository_arn: arn:aws:ecr:us-east-2:606178775542:repository/traff-appli-gvyudgfsjhrz
k8s_ci_vault_password_arn: arn:aws:secretsmanager:us-east-2:606178775542:secret:trafficstops-ansible-vault-password-XKpR8f

k8s_letsencrypt_email: admin@caktusgroup.com
k8s_iam_users: [copelco]

# Pin ingress-nginx and cert-manager to current versions so future upgrades of this
# role will not upgrade these charts without your intervention:
# https://github.com/kubernetes/ingress-nginx/releases
k8s_ingress_nginx_chart_version: "4.9.1"
# https://github.com/jetstack/cert-manager/releases
k8s_cert_manager_chart_version: "v1.14.3"
# AWS only:
# Use the newer load balancer type (NLB). DO NOT edit k8s_aws_load_balancer_type after
# creating your Service.
k8s_aws_load_balancer_type: nlb

# ----------------------------------------------------------------------------
# caktus.k8s-hosting-services: Logging and monitoring configuration
# ----------------------------------------------------------------------------

# k8s_papertrail_logspout_destination: "syslog+tls://logs2.papertrailapp.com:20851"
# k8s_papertrail_logspout_memory_limit: 128Mi

# New Relic Account: forwardjustice-team@caktusgroup.com
k8s_newrelic_chart_version: "5.0.68"
k8s_newrelic_logging_enabled: true
k8s_newrelic_license_key: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  66633739306132643365363862313730386239643136363637336638323066343033653466663234
  6663633261383536383936343939383634636530613633370a363032623332656465303231653535
  33303336323831303939646432313835386261646632343165373963616132343039333432386562
  3163313364666132340a636330353366613061306361303737303332383431336263323135393232
  65303530343134383464616561383139643263326661636133316534303934346438643366666663
  3136353834393937356364356235393236643835663965643532
